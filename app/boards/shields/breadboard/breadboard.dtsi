#include <dt-bindings/zmk/matrix_transform.h>

#define L_DEF  0 // default layer
#define L_NAV  1 // navigation layer

/ {
  chosen {
    zmk,kscan = &kscan0;
    zmk,matrix_transform = &default_transform;
    zephyr,console = &cdc_acm_uart;            // this is to allow USB debugging when the CONFIG_ZMK_USB_LOGGING=y is set in yackboard-v1_right.conf
    zephyr,display = &nice_view;               // ??? experimental for the Nice!View
  };

  default_transform: keymap_transform_0 {
    compatible = "zmk,matrix-transform";
    columns = <4>;
    rows = <2>;

  // The following matrix transform describes the wiring of the breadboard cirquit.
  map = <
    RC(0,0) RC(0,1)    RC(0,3) RC(0,2)
    RC(1,0) RC(1,1)    RC(1,3) RC(1,2)
    >;
  };

  kscan0: kscan_0 {
    compatible = "zmk,kscan-gpio-matrix";
    label = "KSCAN";
    diode-direction = "row2col";

    row-gpios // The following are the rows of the matrix of the Yackboard (with diodes pointing from rows to columns)
      = <&pro_micro 18 GPIO_ACTIVE_HIGH>
      , <&pro_micro 19 GPIO_ACTIVE_HIGH>
      ;
  };
};

// The following is the device used for USB debugging.

&usbd {
  status = "okay";
  cdc_acm_uart: cdc_acm_uart {
    compatible = "zephyr,cdc-acm-uart";
    label = "CDC_ACM_0";
  };
};

// ??? The following is experimental for the Nice!View
// I took it from https://github.com/steffMorse/zmk-config-newage/blob/main/boards/shields/newage/newage.dtsi
// and just changed the CS pin from GPIO 0 to GPIO 1 (which is where I have it on the breadboard)

&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 20)>,
                <NRF_PSEL(SPIM_MOSI, 0, 17)>,
                <NRF_PSEL(SPIM_MISO, 0, 25)>;
        };
    };
    spi0_sleep: spi0_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 20)>,
                <NRF_PSEL(SPIM_MOSI, 0, 17)>,
                <NRF_PSEL(SPIM_MISO, 0, 25)>;
            low-power-enable;
        };
    };
};

nice_view_spi: &spi0 {
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&pro_micro 1 GPIO_ACTIVE_HIGH>;
};

&pro_micro_i2c {
    status = "disabled";
};

// ??? The following is experimental for the Cirque
//
// Cirque --> Nice!Nano
// 1 SCK  --> D6 1.00
// 2 MISO --> D4 0.22
// 3 SS   --> D7 0.11
// 4 DR   --> D8 1.04
// 5 MOSI --> D5 0.24
//

&pinctrl {
    spi1_default: spi1_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 00)>, // ProMicro GPIO 6 = Nice!Nano pin 1.00
                <NRF_PSEL(SPIM_MOSI, 0, 24)>,	 // ProMicro GPIO 5 = Nice!Nano pin 0.24
                <NRF_PSEL(SPIM_MISO, 0, 22)>;	 // ProMicro GPIO 4 = Nice!Nano pin 0.22
        };
    };
    spi1_sleep: spi1_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 00)>, // ProMicro GPIO 6 = Nice!Nano pin 1.00
                <NRF_PSEL(SPIM_MOSI, 0, 24)>,    // ProMicro GPIO 5 = Nice!Nano pin 0.24
                <NRF_PSEL(SPIM_MISO, 0, 22)>;    // ProMicro GPIO 4 = Nice!Nano pin 0.22
            low-power-enable;
        };
    };
};

cirque_spi: &spi1 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&spi1_default>;
    pinctrl-1 = <&spi1_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&pro_micro 7 GPIO_ACTIVE_LOW>;  // ProMicro GPIO 7 = Nice!Nano pin 0.11

    trackpad@0 {
      compatible = "cirque,pinnacle";
      status = "okay";
      reg = <0>;
      spi-max-frequency = <10000000>;
      dr-gpios = <&pro_micro 8 GPIO_ACTIVE_HIGH>; // ProMicro GPIO 8 = Nice!Nano pin 1.04
    };
};
